<UserControl
    x:Class="LiveDescribe.Controls.UserControls.IntervalInfoListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="300"
    xmlns:converters="clr-namespace:LiveDescribe.Converters"
    xmlns:s="clr-namespace:LiveDescribe.Resources.UiStrings"
    xmlns:controls="clr-namespace:LiveDescribe.Controls"
    xmlns:userControls="clr-namespace:LiveDescribe.Controls.UserControls">

    <UserControl.InputBindings>
        <KeyBinding
            Command="{Binding DeleteSelectedSpaceOrDescription}"
            Key="Delete" />
    </UserControl.InputBindings>

    <UserControl.Resources>
        <converters:MillisecondsTimeConverterFormatter
            x:Key="MillisecondsTimeConverter" />
        <converters:VarNotNullToBoolConverter
            x:Key="VarNotNullToBoolConverter" />

        <Style
            x:Key="InfoTabTextBlockStyle"
            TargetType="TextBlock">
            <Setter
                Property="FontWeight"
                Value="Bold" />
        </Style>

        <DataTemplate
            x:Key="ItemIndexTemplate">
            <TextBlock
                Style="{StaticResource InfoTabTextBlockStyle}"
                Text="{Binding Path=Index}"
                Width="30" />
        </DataTemplate>
        <DataTemplate
            x:Key="TitleTemplate">
            <TextBlock
                Text="{Binding Title}" />
        </DataTemplate>
        <DataTemplate
            x:Key="StartInVideoTemplate">
            <TextBlock
                Style="{StaticResource InfoTabTextBlockStyle}"
                Text="{Binding Path=StartInVideo,
                    Converter={StaticResource MillisecondsTimeConverter},
                    Mode=OneWay}" />
        </DataTemplate>
        <DataTemplate
            x:Key="EndInVideoTemplate">
            <TextBlock
                Style="{StaticResource InfoTabTextBlockStyle}"
                Text="{Binding Path=EndInVideo,
                    Converter={StaticResource MillisecondsTimeConverter},
                    Mode=OneWay}" />
        </DataTemplate>
        <DataTemplate
            x:Key="DurationTemplate">
            <TextBlock
                Style="{StaticResource InfoTabTextBlockStyle}"
                Text="{Binding Path=Duration,
                    Converter={StaticResource MillisecondsTimeConverter},
                    Mode=OneWay}" />
        </DataTemplate>
        <DataTemplate
            x:Key="TextDataTemplate">
            <TextBlock
                Text="{Binding Text}" />
        </DataTemplate>
        <DataTemplate
            x:Key="CompleteCheckboxTemplate">
            <CheckBox
                IsThreeState="False"
                IsChecked="{Binding Path=IsRecordedOver,
                    Mode=TwoWay}" />
        </DataTemplate>
        <DataTemplate
            x:Key="LockMovementCheckBoxTemplate">
            <CheckBox
                IsThreeState="False"
                IsChecked="{Binding Path=LockedInPlace,
                    Mode=TwoWay}" />
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="0.5*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition
                Width="88" />
        </Grid.ColumnDefinitions>

        <TabControl
            Name="TabControl"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            SelectedIndex="{Binding TabSelectedIndex}">

            <!--Space Tab-->
            <TabItem
                Name="SpacesTabItem"
                Header="{x:Static s:UiStrings.Header_Spaces}">
                <ListView
                    Name="SpacesListView"
                    VirtualizingPanel.IsVirtualizing="True"
                    ItemsSource="{Binding Spaces}">
                    <ListView.SelectedItem>
                        <Binding
                            Path="SelectedSpace"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True"
                            Mode="TwoWay" />
                    </ListView.SelectedItem>
                    <ListView.Resources>
                        <ContextMenu
                            x:Key="SpaceItemContextMenu">
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_GoToSpace}"
                                Command="{Binding GoToThisSpaceCommand}" />
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_DeleteSpace}"
                                Command="{Binding DeleteSpaceCommand}" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style
                            TargetType="ListViewItem">
                            <Setter
                                Property="ContextMenu"
                                Value="{StaticResource SpaceItemContextMenu}" />
                            <EventSetter
                                Event="MouseDoubleClick"
                                Handler="Item_DoubleClick" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView >
                            <GridViewColumn 
                                Header="{x:Static s:UiStrings.Header_NumberColumn}"
                                CellTemplate="{StaticResource ItemIndexTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Title}"
                                CellTemplate="{StaticResource TitleTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_StartTime}"
                                CellTemplate="{StaticResource StartInVideoTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_EndTime}"
                                CellTemplate="{StaticResource EndInVideoTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Duration}"
                                CellTemplate="{StaticResource DurationTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_SpaceText}"
                                CellTemplate="{StaticResource TextDataTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_SpaceCompleted}"
                                CellTemplate="{StaticResource CompleteCheckboxTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_LockMovement}"
                                CellTemplate="{StaticResource LockMovementCheckBoxTemplate}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>

            <!--Description Tab-->
            <TabItem
                Name="DescriptionsTabItem"
                Header="{x:Static s:UiStrings.Header_RegularDescriptions}">
                <ListView
                    Name="DescriptionsListView"
                    VirtualizingPanel.IsVirtualizing="True"
                    ItemsSource="{Binding RegularDescriptions}">
                    <ListView.Resources>
                        <ContextMenu
                            x:Key="RegularDescriptionContextMenu">
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_GoToDescription}"
                                Command="{Binding NavigateToCommand}" />
                            <MenuItem
                                Header="{x:Static s:UiStrings.Header_OpenFileWinExplorer}"
                                Command="{Binding OpenWinFileExplorerToFile}" />
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_DeleteDescription}"
                                Command="{Binding DeleteCommand}" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style
                            TargetType="ListViewItem">
                            <Setter
                                Property="ContextMenu"
                                Value="{StaticResource RegularDescriptionContextMenu}" />
                            <EventSetter
                                Event="MouseDoubleClick"
                                Handler="Item_DoubleClick" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.SelectedItem>
                        <Binding
                            Path="SelectedRegularDescription"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True"
                            Mode="TwoWay" />
                    </ListView.SelectedItem>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_NumberColumn}"
                                CellTemplate="{StaticResource ItemIndexTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Title}"
                                CellTemplate="{StaticResource TitleTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_StartTime}"
                                CellTemplate="{StaticResource StartInVideoTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_EndTime}"
                                CellTemplate="{StaticResource EndInVideoTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Duration}"
                                CellTemplate="{StaticResource DurationTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_DescriptionText}"
                                CellTemplate="{StaticResource TextDataTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_LockMovement}"
                                CellTemplate="{StaticResource LockMovementCheckBoxTemplate}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>

            <!--Extended Description Tab-->
            <TabItem
                Name="ExtendedDescriptionsTabItem"
                Header="{x:Static s:UiStrings.Header_ExtendedDescriptions}">
                <ListView
                    Name="ExtendedDescriptionsListView"
                    VirtualizingPanel.IsVirtualizing="True"
                    ItemsSource="{Binding ExtendedDescriptions}">
                    <ListView.Resources>
                        <ContextMenu
                            x:Key="ExtendedDescriptionContextMenu">
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_GoToDescription}"
                                Command="{Binding GoToThisDescriptionCommand}" />
                            <MenuItem
                                Header="{x:Static s:UiStrings.Header_OpenFileWinExplorer}"
                                Command="{Binding OpenWinFileExplorerToFile}" />
                            <MenuItem
                                Header="{x:Static s:UiStrings.Command_DeleteDescription}"
                                Command="{Binding DescriptionDeleteCommand}" />
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style
                            TargetType="ListViewItem">
                            <Setter
                                Property="ContextMenu"
                                Value="{StaticResource ExtendedDescriptionContextMenu}" />
                            <EventSetter
                                Event="MouseDoubleClick"
                                Handler="Item_DoubleClick" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.SelectedItem>
                        <Binding
                            Path="SelectedExtendedDescription"
                            UpdateSourceTrigger="PropertyChanged"
                            ValidatesOnDataErrors="True"
                            Mode="TwoWay" />
                    </ListView.SelectedItem>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_NumberColumn}"
                                CellTemplate="{StaticResource ItemIndexTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Title}"
                                CellTemplate="{StaticResource TitleTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_StartTime}"
                                CellTemplate="{StaticResource StartInVideoTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_Duration}"
                                CellTemplate="{StaticResource DurationTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_DescriptionText}"
                                CellTemplate="{StaticResource TextDataTemplate}" />
                            <GridViewColumn
                                Header="{x:Static s:UiStrings.Header_LockMovement}"
                                CellTemplate="{StaticResource LockMovementCheckBoxTemplate}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
        </TabControl>

        <!--Name Textbox -->
        <TextBox
            Grid.Column="1"
            Grid.Row="1"
            Margin="10"
            MaxLength="50"
            IsEnabled="{Binding Path=SelectedItem, Converter={StaticResource VarNotNullToBoolConverter}}">
            <TextBox.Text>
                <Binding
                    Path="SelectedItem.Title"
                    UpdateSourceTrigger="PropertyChanged" />
            </TextBox.Text>
        </TextBox>



        <TextBlock
            Grid.Column="0"
            Grid.Row="1"
            Text="{x:Static s:UiStrings.Header_Title}"
            Margin="5,10,0,10" />

        <TextBlock
            Grid.Column="0"
            Grid.Row="2"
            Text="{x:Static s:UiStrings.Header_DescriptionText}"
            Margin="5,10,0,10" />

        <!--Description Text Box-->
        <TextBox
            Grid.Column="1"
            Grid.Row="2"
            Margin="10"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            TextWrapping="Wrap"
            IsEnabled="{Binding Path=SelectedItem, Converter={StaticResource VarNotNullToBoolConverter}}">
            <TextBox.Text>
                <Binding
                    Path="SelectedItem.Text"
                    UpdateSourceTrigger="PropertyChanged" />
            </TextBox.Text>
        </TextBox>

        <!--Text Controls-->
        <StackPanel
            Grid.Column="2"
            Grid.Row="1"
            Grid.RowSpan="2">

            <userControls:DescriptionRecordingControl
                DataContext="{Binding DescriptionRecordingControlViewModel}" />

            <Button
                Margin="5,20,5,20"
                Command="{Binding RecordInSpace}"
                Content="{x:Static s:UiStrings.Button_RecordMenu}" />

        </StackPanel>
    </Grid>
</UserControl>
