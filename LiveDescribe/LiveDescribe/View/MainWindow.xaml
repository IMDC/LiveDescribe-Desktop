<Window
    x:Class="LiveDescribe.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
    xmlns:controls="clr-namespace:LiveDescribe.Controls"
    xmlns:converters="clr-namespace:LiveDescribe.Converters"
    Title="{Binding WindowTitle}"
    Height="600"
    Width="960"
    MinHeight="600"
    MinWidth="960">
    <Window.Resources>
        <converters:BoolToVisibilityConverter
            x:Key="BoolConverter" />

        <converters:MillisecondsTimeConverterFormatter
            x:Key="MillisecondsTimeConverter" />
        <Style
            x:Key="ControlPanelStyle"
            TargetType="Control">
            <Setter
                Property="Margin"
                Value="5" />
        </Style>
    </Window.Resources>

    <Grid>
        <Border
            Name="LoadingBorder"
            DataContext="{Binding LoadingViewModel}"
            Grid.ZIndex="-1"
            BorderBrush="Black"
            BorderThickness="1"
            Background="#80000000"
            Visibility="{Binding Visible, Converter={StaticResource BoolConverter}}"
            Grid.RowSpan="3">
            <Grid>
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock
                        TextWrapping="Wrap"
                        Text="{Binding Text}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="24"
                        FontWeight="Bold"
                        Foreground="#7EFFFFFF"
                        RenderTransformOrigin="0.421,8.437" />
                    <ProgressBar
                        Value="{Binding Value, Mode=OneWay}"
                        Maximum="{Binding Max}"
                        Name="ImportVideoProgressBar"
                        Background="#80000000"
                        Foreground="White"
                        Height="30" />
                </StackPanel>
            </Grid>
        </Border>

        <DockPanel>
            <!--Top Menu Bar-->
            <Menu
                DockPanel.Dock="Top"
                HorizontalAlignment="Stretch">
                <MenuItem
                    Header="File">
                    <MenuItem
                        Header="New Project"
                        Command="{Binding NewProjectCommand}" />
                    <MenuItem
                        Header="Open Project"
                        Command="{Binding OpenProjectCommand}" />
                    <MenuItem
                        Header="Save Project"
                        Command="{Binding SaveProjectCommand}" />
                    <MenuItem
                        Header="Close Project"
                        Command="{Binding CloseProjectCommand}" />
                    <MenuItem
                        Name="Preferences"
                        Header="Preferences"
                        Command="{Binding ShowPreferencesCommand}" />
                </MenuItem>
                <MenuItem
                    Header="Project">
                    <MenuItem
                        Header="Refresh Project Cache"
                        Command="{Binding ClearCacheCommand}" />
                </MenuItem>
            </Menu>

            <!--Main Grid -->
            <Grid
                DockPanel.Dock="Bottom"
                Background="White">

                <!--Main Grid Row Definitions-->
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--Main Grid Column Definitions-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!--Media Element-->
                <Border
                    Background="Black"
                    Grid.Row="0"
                    Grid.RowSpan="7"
                    Grid.ColumnSpan="4">
                    <controls:LiveDescribeMediaPlayer
                        ScrubbingEnabled="True"
                        DataContext="{Binding VideoControl}"
                        x:Name="VideoMedia"
                        Source="{Binding Path}"
                        LoadedBehavior="Manual">
                        <i:Interaction.Triggers>
                            <i:EventTrigger
                                EventName="MediaOpened">
                                <i:InvokeCommandAction
                                    Command="{Binding VideoOpenedCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger
                                EventName="MediaFailed">
                                <i:InvokeCommandAction
                                    Command="{Binding MediaFailedCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger
                                EventName="MediaEnded">
                                <i:InvokeCommandAction
                                    Command="{Binding MediaEndedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls:LiveDescribeMediaPlayer>
                </Border>

                <!--Button Controls for Video PLayer-->
                <StackPanel
                    Orientation="Horizontal"
                    Grid.Row="7"
                    Grid.ColumnSpan="4"
                    Grid.Column="0">
                    <StackPanel.Resources>
                        <converters:TimeConverterFormatter
                            x:Key="TimeConverterFormatter" />
                    </StackPanel.Resources>
                    <Button
                        DataContext="{Binding VideoControl}"
                        Style="{StaticResource ControlPanelStyle}"
                        Command="{Binding MuteCommand}"
                        Content="Mute" />
                    <Slider
                        DataContext="{Binding VideoControl}"
                        Value="{Binding Path=Volume, ElementName=VideoMedia}"
                        Name="VolumeControl"
                        Maximum="1"
                        Minimum="0"
                        Style="{StaticResource ControlPanelStyle}"
                        Width="100" />
                    <CheckBox
                        DataContext="{Binding DescriptionViewModel}"
                        IsChecked="{Binding ExtendedIsChecked}" />
                    <Button
                        DataContext="{Binding DescriptionViewModel}"
                        Command="{Binding RecordCommand}"
                        Style="{StaticResource ControlPanelStyle}"
                        Content="Record" />
                    <Button
                        DataContext="{Binding VideoControl}"
                        Command="{Binding RewindCommand}"
                        Style="{StaticResource ControlPanelStyle}"
                        Content="Rewind" />
                    <Button
                        DataContext="{Binding VideoControl}"
                        Name="PlayControl"
                        Style="{StaticResource ControlPanelStyle}"
                        Command="{Binding PlayCommand}"
                        Content="Play" />
                    <Button
                        DataContext="{Binding VideoControl}"
                        Name="PauseControl"
                        Style="{StaticResource ControlPanelStyle}"
                        Command="{Binding PauseCommand}"
                        Content="Pause" />
                    <Button
                        DataContext="{Binding VideoControl}"
                        Command="{Binding FastForwardCommand}"
                        Style="{StaticResource ControlPanelStyle}"
                        Content="Fast Forward" />
                    <TextBlock
                        Text="00:00:00:000"
                        x:Name="CurrentTimeLabel"
                        MinWidth="40"
                        Margin="2,15,0,5"
                        FontSize="16"
                        FontFamily="Trebuchet MS"
                        Width="95" />
                </StackPanel>

                <!--Description Information-->
                <TabControl
                    Grid.Row="0"
                    Grid.Column="4"
                    Grid.RowSpan="6"
                    Grid.ColumnSpan="3"
                    DataContext="{Binding DescriptionInfoTabViewModel}"
                    SelectedIndex="{Binding TabSelectedIndex}">
                    <TabItem
                        Header="Spaces">
                        <ListView
                            VirtualizingPanel.IsVirtualizing="True"
                            ItemsSource="{Binding Spaces}">
                            <ListView.SelectedItem>
                                <Binding
                                    Path="SpaceSelectedInList"
                                    UpdateSourceTrigger="PropertyChanged"
                                    ValidatesOnDataErrors="True"
                                    Mode="TwoWay" />
                            </ListView.SelectedItem>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn
                                        Header="Space Text">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding SpaceText}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="Start In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=StartInVideo, 
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="End In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=EndInVideo,
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem
                        Header="Descriptions">
                        <ListView
                            VirtualizingPanel.IsVirtualizing="True"
                            ItemsSource="{Binding RegularDescriptions}">
                            <ListView.SelectedItem>
                                <Binding
                                    Path="RegularDescriptionSelectedInList"
                                    UpdateSourceTrigger="PropertyChanged"
                                    ValidatesOnDataErrors="True"
                                    Mode="TwoWay" />
                            </ListView.SelectedItem>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn
                                        Header="Description Text">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding DescriptionText}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="Start In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=StartInVideo, 
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="End In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=EndInVideo,
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem
                        Header="Extended Descriptions">
                        <ListView
                            VirtualizingPanel.IsVirtualizing="True"
                            ItemsSource="{Binding ExtendedDescriptions}">
                            <ListView.SelectedItem>
                                <Binding
                                    Path="ExtendedDescriptionSelectedInList"
                                    UpdateSourceTrigger="PropertyChanged"
                                    ValidatesOnDataErrors="True"
                                    Mode="TwoWay" />
                            </ListView.SelectedItem>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn
                                        Header="Description Text">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding DescriptionText}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="Start In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=StartInVideo, 
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn
                                        Header="End In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    Text="{Binding Path=EndInVideo,
                                                    Converter={StaticResource MillisecondsTimeConverter},
                                                    Mode=OneWay}"
                                                    FontWeight="Bold" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                </TabControl>

                <!--Timeline-->
                <Border
                    Grid.Column="0"
                    BorderBrush="Black"
                    Grid.ColumnSpan="7"
                    Grid.Row="8"
                    Grid.RowSpan="5"
                    BorderThickness="1"
                    VerticalAlignment="Stretch">
                    <ScrollViewer
                        Name="TimeLine"
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--Audio Canvas which includes the marker and the number line-->
                            <Border
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                SizeChanged="AudioCanvasBorder_SizeChanged_1"
                                Name="AudioCanvasBorder"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <Canvas
                                    Background="Transparent"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    Name="AudioCanvas"
                                    HorizontalAlignment="Left"
                                    MouseRightButtonDown="AudioCanvas_RecordRightClickPosition"
                                    MouseUp="AudioCanvas_MouseUp"
                                    MouseMove="AudioCanvas_MouseMove">

                                    <Canvas.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                DataContext="{Binding SpacesViewModel}"
                                                Header="Add Space"
                                                Command="{Binding AddSpaceCommand}" />
                                        </ContextMenu>
                                    </Canvas.ContextMenu>

                                    <Border
                                        Name="NumberTimelineBorder"
                                        Background="White"
                                        Height="20"
                                        BorderBrush="Black"
                                        BorderThickness="0,0,0,2">
                                        <Canvas
                                            Background="White"
                                            MouseDown="NumberTimeline_OnMouseDown"
                                            Name="NumberTimeline" />
                                    </Border>

                                    <ItemsControl
                                        Name="SpacesItemControl"
                                        DataContext="{Binding SpacesViewModel}"
                                        ItemsSource="{Binding Spaces}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.ItemContainerStyle>
                                            <Style>
                                                <Setter
                                                    Property="Canvas.Left"
                                                    Value="{Binding X}" />
                                                <Setter
                                                    Property="Canvas.Top"
                                                    Value="{Binding Y}" />
                                                <Setter
                                                    Property="Canvas.Height"
                                                    Value="{Binding Height}" />
                                                <Setter
                                                    Property="Canvas.Width"
                                                    Value="{Binding Width}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle>
                                                    <Rectangle.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem
                                                                Header="Delete Space"
                                                                Command="{Binding DeleteSpaceCommand}" />
                                                        </ContextMenu>
                                                    </Rectangle.ContextMenu>
                                                    <Rectangle.Style>
                                                        <Style
                                                            TargetType="Rectangle">
                                                            <Setter
                                                                Property="Fill"
                                                                Value="Blue" />
                                                            <Setter
                                                                Property="Opacity"
                                                                Value="0.2" />
                                                        </Style>
                                                    </Rectangle.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger
                                                            EventName="MouseDown">
                                                            <cmd:EventToCommand
                                                                Command="{Binding SpaceMouseDownCommand, Mode=OneWay}"
                                                                PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger
                                                            EventName="MouseUp">
                                                            <i:InvokeCommandAction
                                                                Command="{Binding SpaceMouseUpCommand}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger
                                                            EventName="MouseMove">
                                                            <cmd:EventToCommand
                                                                Command="{Binding SpaceMouseMoveCommand, Mode=OneWay}"
                                                                PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Polyline
                                        DataContext="{Binding VideoControl}"
                                        IsEnabled="False"
                                        Points="10,20, 0,0,  20,0, 10,20, 10,172"
                                        RenderOptions.EdgeMode="Aliased"
                                        Stroke="Black"
                                        Fill="Black"
                                        StrokeThickness="2"
                                        Width="20"
                                        Canvas.Left="-10"
                                        Canvas.Top="0"
                                        Name="Marker">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger
                                                EventName="MouseDown">
                                                <i:InvokeCommandAction
                                                    Command="{Binding MarkerMouseDownCommand}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger
                                                EventName="MouseUp">
                                                <i:InvokeCommandAction
                                                    Command="{Binding MarkerMouseUpCommand}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger
                                                EventName="MouseMove">
                                                <i:InvokeCommandAction
                                                    Command="{Binding MarkerMouseMoveCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Polyline>
                                </Canvas>
                            </Border>

                            <!--Description Canvas that holds all the descriptions-->
                            <Border
                                Name="DescriptionCanvasBorder"
                                DataContext="{Binding DescriptionViewModel}"
                                Grid.Row="2"
                                BorderBrush="Black"
                                BorderThickness="0.75">
                                <Canvas
                                    Name="DescriptionCanvas"
                                    MouseUp="DescriptionCanvas_MouseUp"
                                    MouseMove="DescriptionCanvas_MouseMove">
                                    <ItemsControl
                                        ItemsSource="{Binding AllDescriptions}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style>
                                                <Style.Triggers>
                                                    <!--This controls the size and position of each rectangle element representing a description If it is not an extended description-->
                                                    <DataTrigger
                                                        Binding="{Binding IsExtendedDescription}"
                                                        Value="false">
                                                        <Setter
                                                            Property="Canvas.Left"
                                                            Value="{Binding X}" />
                                                        <Setter
                                                            Property="Canvas.Top"
                                                            Value="{Binding Y}" />
                                                        <Setter
                                                            Property="Canvas.Height"
                                                            Value="{Binding Height}" />
                                                        <Setter
                                                            Property="Canvas.Width"
                                                            Value="{Binding Width}" />
                                                    </DataTrigger>
                                                    <!--this controls the size and the position of each rectangle element representing an extended description-->
                                                    <DataTrigger
                                                        Binding="{Binding IsExtendedDescription}"
                                                        Value="true">
                                                        <Setter
                                                            Property="Canvas.Left"
                                                            Value="{Binding X}" />
                                                        <Setter
                                                            Property="Canvas.Top"
                                                            Value="{Binding Y}" />
                                                        <Setter
                                                            Property="Canvas.Height"
                                                            Value="{Binding Height}" />
                                                        <Setter
                                                            Property="Canvas.Width"
                                                            Value="8" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>

                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle>
                                                    <Rectangle.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem
                                                                Header="Delete Description"
                                                                Command="{Binding DescriptionDeleteCommand}" />
                                                        </ContextMenu>
                                                    </Rectangle.ContextMenu>
                                                    <Rectangle.Style>
                                                        <Style
                                                            TargetType="Rectangle">
                                                            <Style.Triggers>
                                                                <!--If the description is not an extended description fill it Green-->
                                                                <DataTrigger
                                                                    Binding="{Binding IsExtendedDescription}"
                                                                    Value="false">
                                                                    <Setter
                                                                        Property="Fill"
                                                                        Value="Green" />
                                                                    <Setter
                                                                        Property="Opacity"
                                                                        Value="0.25" />
                                                                </DataTrigger>
                                                                <!--If the description is an extended description fill it Red-->
                                                                <DataTrigger
                                                                    Binding="{Binding IsExtendedDescription}"
                                                                    Value="true">
                                                                    <Setter
                                                                        Property="Fill"
                                                                        Value="Red" />
                                                                    <Setter
                                                                        Property="Opacity"
                                                                        Value="0.25" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger
                                                            EventName="MouseDown">
                                                            <!--   <i:InvokeCommandAction Command="{Binding DescriptionMouseDownCommand}" /> -->
                                                            <cmd:EventToCommand
                                                                Command="{Binding DescriptionMouseDownCommand, Mode=OneWay}"
                                                                PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger
                                                            EventName="MouseUp">
                                                            <i:InvokeCommandAction
                                                                Command="{Binding DescriptionMouseUpCommand}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger
                                                            EventName="MouseMove">
                                                            <!-- <i:InvokeCommandAction Command="{Binding DescriptionMouseMoveCommand}" />-->
                                                            <cmd:EventToCommand
                                                                Command="{Binding DescriptionMouseMoveCommand, Mode=OneWay}"
                                                                PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Canvas>
                            </Border>
                        </Grid>
                    </ScrollViewer>
                </Border>

                <!--Description Text Box-->
                <TextBox
                    DataContext="{Binding DescriptionInfoTabViewModel}"
                    Grid.Column="4"
                    Grid.Row="6"
                    Grid.ColumnSpan="3"
                    Grid.RowSpan="2"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    TextWrapping="Wrap"
                    Text="{Binding DescriptionAndSpaceText}"
                    Margin="1,0,130,0"
                    RenderTransformOrigin="0.5,0.5">
                    <TextBox.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform
                                AngleY="0.22" />
                            <RotateTransform />
                            <TranslateTransform
                                Y="-0.507" />
                        </TransformGroup>
                    </TextBox.RenderTransform>
                </TextBox>

                <!--Text Controls-->
                <StackPanel
                    DataContext="{Binding DescriptionInfoTabViewModel}"
                    Grid.Column="6"
                    Grid.Row="6"
                    Grid.RowSpan="2">
                    <Button
                        Margin="10"
                        Command="{Binding SaveDescriptionTextCommand}"
                        Content="Save Text" />
                    <Button
                        Margin="10"
                        Command="{Binding ClearDescriptionTextCommand}"
                        Content="Clear" />
                </StackPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>