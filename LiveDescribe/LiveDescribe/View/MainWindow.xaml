<Window x:Class="LiveDescribe.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
        xmlns:controls="clr-namespace:LiveDescribe.Controls"
        xmlns:converters="clr-namespace:LiveDescribe.Converters"
        Title="MainWindow" Height="800" Width="1280" MinHeight="800" MinWidth="1280">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolConverter"/>
    </Window.Resources>

    <Grid>

        <Border Name="LoadingBorder" DataContext="{Binding VideoControl}" Grid.ZIndex="2" BorderBrush="Black" BorderThickness="1" Background="#80000000" Visibility="{Binding IsBusyStrippingAudio, Converter={StaticResource BoolConverter}}" Grid.RowSpan="3">
            <Grid>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock TextWrapping="Wrap" Text="Please wait while we import your video..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" FontWeight="Bold" Foreground="#7EFFFFFF" RenderTransformOrigin="0.421,8.437"/>
                    <ProgressBar Value="{Binding CurrentProgressAudioStripping, Mode=OneWay}" Maximum="100" Name="ImportVideoProgressBar" Background="#80000000" Foreground="White" Height="30"/>
                </StackPanel>
            </Grid>
        </Border>

        <DockPanel>
            <!--Top Menu Bar-->
            <Menu DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                <MenuItem Header="File">
                    <MenuItem  DataContext="{Binding VideoControl}" Header="Import Video" Command="{Binding ImportVideoCommand}"/>
                    <MenuItem Header="Close Project" Command="{Binding CloseProjectCommand}"/>
                    <MenuItem DataContext="{Binding PreferencesViewModel}" Name="Preferences" Header="Preferences" Command="{Binding ShowPreferencesCommand}"/>
                </MenuItem>
            </Menu>

            <!--Main Grid -->
            <Grid DockPanel.Dock="Bottom"  Background="White">

                <!--Main Grid Row Definitions-->
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!--Main Grid Column Definitions-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!--Media Element-->
                <Border Background="Black" Grid.Row="0" Grid.RowSpan="7" Grid.ColumnSpan="4">
                    <controls:LiveDescribeMediaPlayer ScrubbingEnabled="True" DataContext="{Binding VideoControl}"  x:Name="VideoMedia" Source="{Binding Path}" LoadedBehavior="Manual" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MediaOpened">
                                <i:InvokeCommandAction Command="{Binding VideoOpenedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MediaFailed">
                                <i:InvokeCommandAction Command="{Binding MediaFailedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MediaEnded">
                                <i:InvokeCommandAction Command="{Binding MediaEndedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls:LiveDescribeMediaPlayer>
                </Border>

                <!--Button Controls for Video PLayer-->
                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.ColumnSpan="4" Grid.Column="0">
                    <StackPanel.Resources>
                        <converters:TimeConverterFormatter x:Key="TimeConverterFormatter" />
                    </StackPanel.Resources>

                    <Button DataContext="{Binding VideoControl}" Margin="11" Height="30" Command="{Binding MuteCommand}">Mute</Button>
                    <Slider DataContext="{Binding VideoControl}" Value="{Binding Path=Volume, ElementName=VideoMedia}" Name="VolumeControl" Maximum="1" Minimum="0"  Margin="15"
                        Width="100"/>
                    <CheckBox DataContext="{Binding DescriptionViewModel}" IsChecked="{Binding ExtendedIsChecked}"/>
                    <Button DataContext="{Binding DescriptionViewModel}" Command="{Binding RecordCommand}" Margin="11" Height="30">Record</Button>
                    <Button DataContext="{Binding VideoControl}" Command="{Binding RewindCommand}" Margin="11" Height="30">Rewind</Button>
                    <Button DataContext="{Binding VideoControl}" Name="PlayControl" Margin="11" Height="30" Command="{Binding PlayCommand}">Play</Button>
                    <Button DataContext="{Binding VideoControl}" Name="PauseControl" Margin="11" Height="30" Command="{Binding PauseCommand}">Pause</Button>
                    <Button DataContext="{Binding VideoControl}" Command="{Binding FastForwardCommand}" Margin="11" Height="30">Fast Forward</Button>
                    <TextBlock  Text="00:00:000" Name="CurrentTimeLabel" MinWidth="40" Margin="50,15,0,15" FontSize="16" FontFamily="Trebuchet MS"/>
                </StackPanel>

                <!--Description Information-->
                <TabControl Grid.Row="0" Grid.Column="4" Grid.RowSpan="6" Grid.ColumnSpan="3">
                    <TabItem Header="Spaces">
                    </TabItem>
                    <TabItem DataContext="{Binding DescriptionViewModel}" Header="Descriptions">
                        <ListView VirtualizingPanel.IsVirtualizing="True" ItemsSource="{Binding RegularDescriptions}">
                            <ListView.SelectedItem>
                                <Binding Path="DescriptionSelectedInList" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" Mode="TwoWay"/>
                            </ListView.SelectedItem>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Description Text">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DescriptionText}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Start In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding StartInVideo}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="End In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding EndInVideo}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                    <TabItem DataContext="{Binding DescriptionViewModel}" Header="Extended Descriptions">
                        <ListView VirtualizingPanel.IsVirtualizing="True" ItemsSource="{Binding ExtendedDescriptions}">
                            <ListView.SelectedItem>
                                <Binding Path="DescriptionSelectedInList" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" Mode="TwoWay"/>
                            </ListView.SelectedItem>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Description Text">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DescriptionText}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Start In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding StartInVideo}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="End In Video(ms)">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding EndInVideo}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                </TabControl>

                <!--Timeline-->
                <Border Grid.Column="0" BorderBrush="Black" Grid.ColumnSpan="7"  Grid.Row="8" Grid.RowSpan="5" BorderThickness="1"  VerticalAlignment="Stretch">
                    <ScrollViewer Name="TimeLine"  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--Audio Canvas which includes the marker and the number line-->
                            <Border Grid.Row="0" Grid.RowSpan="2" SizeChanged="AudioCanvasBorder_SizeChanged_1" DataContext="{Binding VideoControl}" Name="AudioCanvasBorder"    BorderBrush="Black" BorderThickness="1">
                                <Canvas VirtualizingPanel.IsVirtualizing="True" Name="AudioCanvas">
                                    <Border  Name="NumberTimelineBorder" Background="White" Height="20" BorderBrush="Black" BorderThickness="0,0,0,2">
                                        <Canvas Background="White" MouseDown="NumberTimeline_OnMouseDown" Name="NumberTimeline"/>
                                    </Border>

                                    <Polyline IsEnabled="False" Points="10,20, 0,0,  20,0, 10,20, 10,172"   RenderOptions.EdgeMode="Aliased" Stroke="Black" Fill="Black" StrokeThickness="2" Width="20"  Canvas.Left="-10" Canvas.Top="0" Name="Marker">
                                       <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDown">
                                                <i:InvokeCommandAction Command="{Binding MarkerMouseDownCommand}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseUp">
                                                <i:InvokeCommandAction Command="{Binding MarkerMouseUpCommand}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseMove">
                                               <i:InvokeCommandAction Command="{Binding MarkerMouseMoveCommand}"/>                                               
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Polyline>
                                    
                                </Canvas>
                            </Border>
                            
                            <!--Description Canvas that holds all the descriptions-->
                            <Border Name="DescriptionCanvasBorder" DataContext="{Binding DescriptionViewModel}" Grid.Row="2" BorderBrush="Black" BorderThickness="0.75" >
                                <Canvas Name="DescriptionCanvas">
                                    <ItemsControl ItemsSource="{Binding AllDescriptions}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <Style>
                                                <Style.Triggers>
                                                    <!--This controls the size and position of each rectangle element representing a description If it is not an extended description-->
                                                    <DataTrigger Binding="{Binding IsExtendedDescription}" Value="false">
                                                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>                        
                                                        <Setter Property="Canvas.Height" Value="{Binding Height}"/>
                                                        <Setter Property="Canvas.Width" Value="{Binding Width}"/>
                                                    </DataTrigger>
                                                    <!--this controls the size and the position of each rectangle element representing an extended description-->
                                                    <DataTrigger Binding="{Binding IsExtendedDescription}" Value="true">
                                                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                                                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                                                        <Setter Property="Canvas.Height" Value="{Binding Height}"/>
                                                        <Setter Property="Canvas.Width" Value="8"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle>
                                                    <Rectangle.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Delete" Command="{Binding DescriptionDeleteCommand}">
                                                                
                                                            </MenuItem>
                                                        </ContextMenu>
                                                    </Rectangle.ContextMenu>
                                                    <Rectangle.Style>
                                                        <Style TargetType="Rectangle">
                                                            <Style.Triggers>
                                                                <!--If the description is not an extended description fill it Green-->
                                                                <DataTrigger Binding="{Binding IsExtendedDescription}" Value="false">
                                                                    <Setter Property="Fill" Value="Green"/>
                                                                    <Setter Property="Opacity" Value="0.25"/>
                                                                </DataTrigger>
                                                                <!--If the description is an extended description fill it Red-->
                                                                <DataTrigger Binding="{Binding IsExtendedDescription}" Value="true">
                                                                    <Setter Property="Fill" Value="Red"/>
                                                                    <Setter Property="Opacity" Value="0.25"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Rectangle.Style>
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseDown">
                                                         <!--   <i:InvokeCommandAction Command="{Binding DescriptionMouseDownCommand}"/> -->
                                                            <cmd:EventToCommand Command="{Binding DescriptionMouseDownCommand, Mode=OneWay}"
                                    PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="MouseUp">
                                                            <i:InvokeCommandAction Command="{Binding DescriptionMouseUpCommand}"/>
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="MouseMove">
                                                           <!-- <i:InvokeCommandAction Command="{Binding DescriptionMouseMoveCommand}"/>-->
                                                            <cmd:EventToCommand Command="{Binding DescriptionMouseMoveCommand, Mode=OneWay}"
                                    PassEventArgsToCommand="True" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Rectangle>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Canvas>
                            </Border>
                        </Grid>
                    </ScrollViewer>
                </Border>

                <!--Description Text Box-->
                <TextBox Grid.Column="4" Grid.Row="6" Grid.ColumnSpan="2" Grid.RowSpan="2" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" Text="Enter Description Text" />

                <!--Text Controls-->
                <StackPanel Grid.Column="6" Grid.Row="6" Grid.RowSpan="2">
                    <Button Margin="10">
                        Save Text
                    </Button>
                    <Button Margin="10">
                        Clear
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
