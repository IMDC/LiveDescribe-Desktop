namespace LiveDescribe.Model
{
    /// <summary>
    /// Represents a File or Directory that is associated with a name.
    /// </summary>
    public class NamedFilePath
    {
        /// <summary>
        /// The name associated with the path.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// The path.
        /// </summary>
        public string Path { get; set; }

        #region Equals
        //These methods were auto-generated by resharper

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != this.GetType()) return false;
            return Equals((NamedFilePath)obj);
        }

        protected bool Equals(NamedFilePath other)
        {
            return string.Equals(Name, other.Name) && string.Equals(Path, other.Path);
        }

        public override int GetHashCode()
        {
            unchecked
            {
                return (Name.GetHashCode() * 397) ^ Path.GetHashCode();
            }
        }

        public static bool operator ==(NamedFilePath left, NamedFilePath right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(NamedFilePath left, NamedFilePath right)
        {
            return !Equals(left, right);
        }
        #endregion
    }
}
